{"name":"Dropper","description":"A jQuery plugin for simple drag and drop uploads. ","version":"1.0.0","demo":"http:\/\/formstone.it\/components\/Dropper\/demo\/index.html","repository":"https:\/\/github.com\/Formstone\/Dropper","documentation":{"options":[{"name":"action","type":"string","description":"Where to submit uploads"},{"name":"label","type":"string","default":"'Drag and drop files or click to select'","description":"Dropzone text"},{"name":"maxQueue","type":"int","default":"2","description":"Number of files to simultaneously upload"},{"name":"maxSize","type":"int","default":"5242880","description":"Max file size allowed"},{"name":"postData","type":"object","description":"Extra data to post with upload"},{"name":"postKey","type":"string","default":"'file'","description":"Key to upload file as"}],"events":[{"name":"start.dropper"},{"name":"complete.dropper"},{"name":"fileStart.dropper"},{"name":"fileProgress.dropper"},{"name":"fileComplete.dropper"},{"name":"fileError.dropper"}],"methods":[{"name":"defaults","description":"Sets default plugin options","params":[{"name":"opts","type":"object","default":"{}","description":"Options object"}],"example":"$.dropper(\"defaults\", opts);"},{"name":"_init","description":"Initializes plugin","params":[{"name":"opts","type":"object","description":"Initialization options"}],"private":true},{"name":"_build","description":"Builds each instance","params":[{"name":"$nav","type":"jQuery object","description":"Target jQuery object"},{"name":"opts","type":"object","default":"{}","description":"Options object"}],"private":true},{"name":"_onClick","description":"Handles click to dropzone","params":[{"name":"e","type":"object","description":"Event data"}],"private":true},{"name":"_onChange","description":"Handles change to hidden input","params":[{"name":"e","type":"object","description":"Event data"}],"private":true},{"name":"_onDragEnter","description":"Handles dragenter to dropzone","params":[{"name":"e","type":"object","description":"Event data"}],"private":true},{"name":"_onDragOver","description":"Handles dragover to dropzone","params":[{"name":"e","type":"object","description":"Event data"}],"private":true},{"name":"_onDragOut","description":"Handles dragout to dropzone","params":[{"name":"e","type":"object","description":"Event data"}],"private":true},{"name":"_onDrop","description":"Handles drop to dropzone","params":[{"name":"e","type":"object","description":"Event data"}],"private":true},{"name":"_handleUpload","description":"Handles new files","params":[{"name":"data","type":"object","description":"Instance data"},{"name":"files","type":"object","description":"File list"}],"private":true},{"name":"_checkQueue","description":"Checks and updates file queue","params":[{"name":"data","type":"object","description":"Instance data"}],"private":true},{"name":"_uploadFile","description":"Uploads file","params":[{"name":"data","type":"object","description":"Instance data"},{"name":"file","type":"object","description":"Target file"},{"name":"formData","type":"object","description":"Target form"}],"private":true}]},"files":{"js":["jquery.fs.dropper.js"],"css":["jquery.fs.dropper.css"]},"extra":"","demo_resources":"<!--[DEMO:START-RESOURCES]-->\n\n\t\t<style>\n\t\t\t.demo .filelists { margin: 20px 0; }\n\t\t\t.demo .filelists h5 { margin: 10px 0 0; }\n\n\t\t\t.demo .filelist { margin: 0; padding: 10px 0; }\n\t\t\t.demo .filelist li { background: #fff; border-bottom: 1px solid #eee; font-size: 14px; list-style: none; padding: 5px; }\n\t\t\t.demo .filelist li:before { display: none; }\n\t\t\t.demo .filelist li .file { color: #333; }\n\t\t\t.demo .filelist li .progress { color: #666; float: right; font-size: 10px; text-transform: uppercase; }\n\t\t\t.demo .filelist li .delete { color: red; cursor: pointer; float: right; font-size: 10px; text-transform: uppercase; }\n\t\t\t.demo .filelist li.complete .progress { color: green; }\n\t\t\t.demo .filelist li.error .progress { color: red; }\n\t\t<\/style>\n\n\t\t<script>\n\t\t\tvar $filequeue,\n\t\t\t\t$filelist;\n\n\t\t\t$(document).ready(function() {\n\t\t\t\t$filequeue = $(\".demo .filelist.queue\");\n\t\t\t\t$filelist = $(\".demo .filelist.complete\");\n\n\t\t\t\t$(\".demo .dropped\").dropper({\n\t\t\t\t\taction: \"http:\/\/formstone.it\/components\/Dropper\/demo\/upload.php\",\n\t\t\t\t\tmaxSize: 1048576\n\t\t\t\t}).on(\"start.dropper\", onStart)\n\t\t\t\t  .on(\"complete.dropper\", onComplete)\n\t\t\t\t  .on(\"fileStart.dropper\", onFileStart)\n\t\t\t\t  .on(\"fileProgress.dropper\", onFileProgress)\n\t\t\t\t  .on(\"fileComplete.dropper\", onFileComplete)\n\t\t\t\t  .on(\"fileError.dropper\", onFileError);\n\n\t\t\t\t$(window).one(\"pronto.load\", function() {\n\t\t\t\t\t$(\".demo .dropped\").dropper(\"destroy\").off(\".dropper\");\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tfunction onStart(e, files) {\n\t\t\t\tconsole.log(\"Start\");\n\n\t\t\t\tvar html = '';\n\n\t\t\t\tfor (var i = 0; i < files.length; i++) {\n\t\t\t\t\thtml += '<li data-index=\"' + files[i].index + '\"><span class=\"file\">' + files[i].name + '<\/span><span class=\"progress\">Queued<\/span><\/li>';\n\t\t\t\t}\n\n\t\t\t\t$filequeue.append(html);\n\t\t\t}\n\n\t\t\tfunction onComplete(e) {\n\t\t\t\tconsole.log(\"Complete\");\n\t\t\t\t\/\/ All done!\n\t\t\t}\n\n\t\t\tfunction onFileStart(e, file) {\n\t\t\t\tconsole.log(\"File Start\");\n\n\t\t\t\t$filequeue.find(\"li[data-index=\" + file.index + \"]\")\n\t\t\t\t\t\t  .find(\".progress\").text(\"0%\");\n\t\t\t}\n\n\t\t\tfunction onFileProgress(e, file, percent) {\n\t\t\t\tconsole.log(\"File Progress\");\n\n\t\t\t\t$filequeue.find(\"li[data-index=\" + file.index + \"]\")\n\t\t\t\t\t\t  .find(\".progress\").text(percent + \"%\");\n\t\t\t}\n\n\t\t\tfunction onFileComplete(e, file, response) {\n\t\t\t\tconsole.log(\"File Complete\");\n\n\t\t\t\tif (response.trim() === \"\" || response.toLowerCase().indexOf(\"error\") > -1) {\n\t\t\t\t\t$filequeue.find(\"li[data-index=\" + file.index + \"]\").addClass(\"error\")\n\t\t\t\t\t\t\t  .find(\".progress\").text(response.trim());\n\t\t\t\t} else {\n\t\t\t\t\tvar $target = $filequeue.find(\"li[data-index=\" + file.index + \"]\");\n\n\t\t\t\t\t$target.find(\".file\").text(file.name);\n\t\t\t\t\t$target.find(\".progress\").remove();\n\t\t\t\t\t$target.appendTo($filelist);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onFileError(e, file, error) {\n\t\t\t\tconsole.log(\"File Error\");\n\n\t\t\t\t$filequeue.find(\"li[data-index=\" + file.index + \"]\").addClass(\"error\")\n\t\t\t\t\t\t  .find(\".progress\").text(\"Error: \" + error);\n\t\t\t}\n\t\t<\/script>\n\n\t\t","demo_content":"<!--[DEMO:START-CONTENT]-->\n\n\t\t\t\t<!-- BASIC -->\n\t\t\t\t<h2>Basic<\/h2>\n\t\t\t\t<p>Dropper will create a simple 'drop zone' for file uploads:<\/p>\n\n\t\t\t\t<pre class=\"example\"><code class=\"language-javascript\">$(\".target\").dropper({\n\taction: \"upload.php\"\n});<\/code><\/pre>\n\t\t\t\t<pre class=\"example\"><code class=\"language-markup\">&lt;div class=\"target\"&gt;&lt;\/div&gt;<\/code><\/pre>\n\n\t\t\t\t<h5>Demo<\/h5>\n\t\t\t\t<form action=\"#\" class=\"demo_form\">\n\t\t\t\t\t<div class=\"dropped\"><\/div>\n\n\t\t\t\t\t<div class=\"filelists\">\n\t\t\t\t\t\t<h5>Complete<\/h5>\n\t\t\t\t\t\t<ol class=\"filelist complete\">\n\t\t\t\t\t\t<\/ol>\n\t\t\t\t\t\t<h5>Queued<\/h5>\n\t\t\t\t\t\t<ol class=\"filelist queue\">\n\t\t\t\t\t\t<\/ol>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/form>\n\n\t\t\t\t<!-- UPLOADS -->\n\t\t\t\t<h2>Uploads<\/h2>\n\t\t\t\t<p>Dropper does not store or manipulate uploaded files on the server, it simply facilitates the asynchronous upload process from the front end.<\/p>\n\n\t\t\t\t"}