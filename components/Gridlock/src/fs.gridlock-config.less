	// Variables

	@class-container:     gridlock;
	@class-row:           row;
	@class-contained:     contained;
	@class-padded:        padded;
	@class-centered:      centered;

	@class-all:           all;
	@class-min:           min;
	@class-mobile:        mobile;
	@class-tablet:        tablet;
	@class-desktop:       desktop;
	@class-max:           max;

	@columns-mobile:      3;
	@columns-tablet:      6;
	@columns-desktop:     12;

	@width-min:           300px;
	@width-mobile:        480px;
	@width-tablet:        720px;
	@width-desktop:       960px;
	@width-max:           1200px;

	@width-break-min:     320px;
	@width-break-mobile:  500px;
	@width-break-tablet:  740px;
	@width-break-desktop: 980px;
	@width-break-max:     1220px;

	@gutter:              1.0416666666666667%;

	// Column

	.column (@parent-width, @count, @margin, @index) {
		width: ((100% / @count) * @index) - (@margin * 2);
	}

	// Columns

	.columns (@parent-width, @class, @margin, @count, @prefix:~"", @index:1) when (@index <= @count) {
		// Percentage
		@{prefix}.@{class}-@{index} {
			.column(@parent-width, @count, @margin, @index);
		}

		.columns(@parent-width, @class, @margin, @count, @prefix, (@index + 1));
	}

	// Column Static

	// .columnStatic (@parent-width, @count, @margin, @index) {
	//	width: ceil( ((@parent-width / @count) * @index) - (unit((@margin / 100) * @parent-width, px) * 2) );
	// }

	// Columns Static

	// .columnsStatic (@parent-width, @class, @margin, @count, @prefix:~"", @index:1) when (@index <= @count) {
	// 	// Static
	// 	& when (@parent-width > 0) {
	// 		@{prefix}.@{class}-static-@{index} {
	// 			.columnStatic(@parent-width, @count, @margin, @index);
	// 		}
	// 	}
	//
	// 	.columnsStatic(@parent-width, @class, @margin, @count, @prefix, (@index + 1));
	// }

	// Columns - Fractioned

	.columnsFractioned (@parent-width, @class, @margin, @prefix:~"") {
		// Percentage
		@{prefix}.@{class}-fifth {
			.column(@parent-width, 5, @margin, 1);
		}
		@{prefix}.@{class}-fourth {
			.column(@parent-width, 4, @margin, 1);
		}
		@{prefix}.@{class}-third {
			.column(@parent-width, 3, @margin, 1);
		}
		@{prefix}.@{class}-half {
			.column(@parent-width, 2, @margin, 1);
		}
		@{prefix}.@{class}-full {
			.column(@parent-width, 1, @margin, 1);
		}

		// Static
		// & when (@parent-width > 0) {
		// 	@{prefix}.@{class}-fourth-static {
		// 		.columnStatic(@parent-width, 4, @margin, 1);
		// 	}
		// 	@{prefix}.@{class}-third-static {
		// 		.columnStatic(@parent-width, 3, @margin, 1);
		// 	}
		// 	@{prefix}.@{class}-half-static {
		// 		.columnStatic(@parent-width, 2, @margin, 1);
		// 	}
		// 	@{prefix}.@{class}-full-static {
		// 		.columnStatic(@parent-width, 1, @margin, 1);
		// 	}
		// }
	}

	// Columns - Pushed

	.columnPushed (@parent-width, @count, @margin, @index) {
		margin-left: ((100% / @count) * @index) + @margin;
	}

	.columnsPushed (@parent-width, @class, @margin, @count, @prefix:~"", @index:1) when (@index < @count) {
		@{prefix}.@{class}-push-@{index} {
			.columnPushed(@parent-width, @count, @margin, @index);
		}

		.columnsPushed(@parent-width, @class, @margin, @count, @prefix, (@index + 1));
	}

	.columnsPushedFractioned (@parent-width, @class, @margin, @prefix:~"") {
		@{prefix}.@{class}-push-fifth {
			.columnPushed(@parent-width, 5, @margin, 1);
		}
		@{prefix}.@{class}-push-fourth {
			.columnPushed(@parent-width, 4, @margin, 1);
		}
		@{prefix}.@{class}-push-third {
			.columnPushed(@parent-width, 3, @margin, 1);
		}
		@{prefix}.@{class}-push-half {
			.columnPushed(@parent-width, 2, @margin, 1);
		}
	}

	// Static Margins

	// .marginStatic (@parent-width, @class, @margin) {
	// 	[class*="@{class-all}-static-"],
	// 	[class*="@{class}-static-"] { margin-left: unit( floor((@margin / 100) * @parent-width), px); margin-right: unit( floor((@margin / 100) * @parent-width), px); }
	//
	// 	[class*="@{class-all}-static-"].@{class-contained},
	// 	[class*="@{class}-static-"].@{class-contained} { margin-left: unit( floor((@margin / 100) * @parent-width), px); margin-right: unit( floor((@margin / 100) * @parent-width), px); }
	//
	// 	[class*="@{class-all}-static-"].@{class-padded},
	// 	[class*="@{class}-static-"].@{class-padded} { margin-left: unit( floor((@margin / 100) * @parent-width), px); margin-right: unit( floor((@margin / 100) * @parent-width), px); }
	// }

	// Scafold - Base

	.scafoldGridBase (@parent-width:0, @class) {
		// Fractions
		.columnsFractioned(@parent-width, @class, @gutter);

		// Fractions Push
		.columnsPushedFractioned(@parent-width, @class, @gutter);

		// Fractions Contained
		.columnsFractioned(@parent-width, @class, 0, ~".@{class-contained}");

		// Fractions Contained Push
		.columnsPushedFractioned(@parent-width, @class, 0, ~".@{class-contained}");

		// Centered
		[class*="@{class}-"].@{class-centered} { float: none; margin-left: auto; margin-right: auto; }
	}

	// Scafold - Grid

	.scafoldGrid (@parent-width:0, @class, @columns) {
		// Cells
		.columns(@parent-width, @class, @gutter, @columns);

		// Cells Push
		.columnsPushed(@parent-width, @class, @gutter, @columns);

		// Contained
		.columns(@parent-width, @class, 0, @columns, ~".@{class-contained}");

		// Contained Push
		.columnsPushed(@parent-width, @class, 0, @columns, ~".@{class-contained}");

		// Cells Static
		// .columnsStatic(@parent-width, @class, @gutter, @columns);

		// Contained Static
		// .columnsStatic(@parent-width, @class, 0, @columns, ~".@{class-contained}");

		// Static Margins
		// .marginStatic(@parent-width, @class, @columns);
	}